//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Evaluant.Uss.WcfClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IRemotePersistenceEngine")]
    public interface IRemotePersistenceEngine {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/Load", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadResponse")]
        Evaluant.Uss.Domain.Entry[][] Load(string query);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/Load", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadResponse")]
        System.IAsyncResult BeginLoad(string query, System.AsyncCallback callback, object asyncState);
        
        Evaluant.Uss.Domain.Entry[][] EndLoad(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithPaging", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithPagingResponse")]
        Evaluant.Uss.Domain.Entry[][] LoadWithPaging(string query, int first, int max);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithPaging", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithPagingResponse")]
        System.IAsyncResult BeginLoadWithPaging(string query, int first, int max, System.AsyncCallback callback, object asyncState);
        
        Evaluant.Uss.Domain.Entry[][] EndLoadWithPaging(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithId", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithIdResponse")]
        Evaluant.Uss.Domain.Entry[] LoadWithId(string type, string id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithId", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithIdResponse")]
        System.IAsyncResult BeginLoadWithId(string type, string id, System.AsyncCallback callback, object asyncState);
        
        Evaluant.Uss.Domain.Entry[] EndLoadWithId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithIds", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithIdsResponse")]
        Evaluant.Uss.Domain.Entry[][] LoadWithIds(string type, string[] id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadWithIds", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadWithIdsResponse")]
        System.IAsyncResult BeginLoadWithIds(string type, string[] id, System.AsyncCallback callback, object asyncState);
        
        Evaluant.Uss.Domain.Entry[][] EndLoadWithIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadAllReferences", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadAllReferencesResponse")]
        void LoadAllReferences(Evaluant.Uss.Domain.Entry[] entity);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadAllReferences", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadAllReferencesResponse")]
        System.IAsyncResult BeginLoadAllReferences(Evaluant.Uss.Domain.Entry[] entity, System.AsyncCallback callback, object asyncState);
        
        void EndLoadAllReferences(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnSingle", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnSingleResponse")]
        void LoadReferencesOnSingle(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnSingle", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnSingleResponse")]
        System.IAsyncResult BeginLoadReferencesOnSingle(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references, System.AsyncCallback callback, object asyncState);
        
        void EndLoadReferencesOnSingle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnMany", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnManyResponse")]
        void LoadReferencesOnMany(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnMany", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadReferencesOnManyResponse")]
        System.IAsyncResult BeginLoadReferencesOnMany(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references, System.AsyncCallback callback, object asyncState);
        
        void EndLoadReferencesOnMany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadDouble", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadDoubleResponse")]
        double LoadDouble(string query);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadDouble", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadDoubleResponse")]
        System.IAsyncResult BeginLoadDouble(string query, System.AsyncCallback callback, object asyncState);
        
        double EndLoadDouble(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since the wrapper name (LoadScalarRequest) of message LoadScalarRequest does not match the default value (LoadScalar)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/LoadScalar", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<double>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<ulong>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<bool>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Guid>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<byte[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<double>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<float>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<float>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<decimal>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<decimal>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<byte>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<byte>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<sbyte>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<sbyte>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry[][]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<short>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<long>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<ushort>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<uint>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<ulong>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<short>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<int>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<long>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<ushort>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.Domain.Entry<System.Nullable<uint>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.Uss.State))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Type))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Reflection.MemberInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.NLinq.NLinqQuery[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Evaluant.NLinq.NLinqQuery))]
        Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse LoadScalar(Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/LoadScalar", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/LoadScalarResponse")]
        System.IAsyncResult BeginLoadScalar(Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest request, System.AsyncCallback callback, object asyncState);
        
        Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse EndLoadScalar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/InitializeRepository", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/InitializeRepositoryResponse")]
        void InitializeRepository();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/InitializeRepository", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/InitializeRepositoryResponse")]
        System.IAsyncResult BeginInitializeRepository(System.AsyncCallback callback, object asyncState);
        
        void EndInitializeRepository(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRemotePersistenceEngine/CreateId", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/CreateIdResponse")]
        void CreateId(Evaluant.Uss.Domain.Entry[] e);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRemotePersistenceEngine/CreateId", ReplyAction="http://tempuri.org/IRemotePersistenceEngine/CreateIdResponse")]
        System.IAsyncResult BeginCreateId(Evaluant.Uss.Domain.Entry[] e, System.AsyncCallback callback, object asyncState);
        
        void EndCreateId(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadScalarRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadScalarRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ExpectedType;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int First;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public int Max;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Query;
        
        public LoadScalarRequest() {
        }
        
        public LoadScalarRequest(string ExpectedType, int First, int Max, string Query) {
            this.ExpectedType = ExpectedType;
            this.First = First;
            this.Max = Max;
            this.Query = Query;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LoadScalarResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LoadScalarResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string returnType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public object result;
        
        public LoadScalarResponse() {
        }
        
        public LoadScalarResponse(string returnType, object result) {
            this.returnType = returnType;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRemotePersistenceEngineChannel : Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Evaluant.Uss.Domain.Entry[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Evaluant.Uss.Domain.Entry[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadWithPagingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadWithPagingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Evaluant.Uss.Domain.Entry[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Evaluant.Uss.Domain.Entry[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadWithIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadWithIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Evaluant.Uss.Domain.Entry[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Evaluant.Uss.Domain.Entry[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadWithIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadWithIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Evaluant.Uss.Domain.Entry[][] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Evaluant.Uss.Domain.Entry[][])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadDoubleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadDoubleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public double Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object result1 {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemotePersistenceEngineClient : System.ServiceModel.ClientBase<Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine>, Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine {
        
        private BeginOperationDelegate onBeginLoadDelegate;
        
        private EndOperationDelegate onEndLoadDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadWithPagingDelegate;
        
        private EndOperationDelegate onEndLoadWithPagingDelegate;
        
        private System.Threading.SendOrPostCallback onLoadWithPagingCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadWithIdDelegate;
        
        private EndOperationDelegate onEndLoadWithIdDelegate;
        
        private System.Threading.SendOrPostCallback onLoadWithIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadWithIdsDelegate;
        
        private EndOperationDelegate onEndLoadWithIdsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadWithIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadAllReferencesDelegate;
        
        private EndOperationDelegate onEndLoadAllReferencesDelegate;
        
        private System.Threading.SendOrPostCallback onLoadAllReferencesCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadReferencesOnSingleDelegate;
        
        private EndOperationDelegate onEndLoadReferencesOnSingleDelegate;
        
        private System.Threading.SendOrPostCallback onLoadReferencesOnSingleCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadReferencesOnManyDelegate;
        
        private EndOperationDelegate onEndLoadReferencesOnManyDelegate;
        
        private System.Threading.SendOrPostCallback onLoadReferencesOnManyCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadDoubleDelegate;
        
        private EndOperationDelegate onEndLoadDoubleDelegate;
        
        private System.Threading.SendOrPostCallback onLoadDoubleCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadScalarDelegate;
        
        private EndOperationDelegate onEndLoadScalarDelegate;
        
        private System.Threading.SendOrPostCallback onLoadScalarCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitializeRepositoryDelegate;
        
        private EndOperationDelegate onEndInitializeRepositoryDelegate;
        
        private System.Threading.SendOrPostCallback onInitializeRepositoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateIdDelegate;
        
        private EndOperationDelegate onEndCreateIdDelegate;
        
        private System.Threading.SendOrPostCallback onCreateIdCompletedDelegate;
        
        public RemotePersistenceEngineClient() {
        }
        
        public RemotePersistenceEngineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemotePersistenceEngineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemotePersistenceEngineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemotePersistenceEngineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<LoadCompletedEventArgs> LoadCompleted;
        
        public event System.EventHandler<LoadWithPagingCompletedEventArgs> LoadWithPagingCompleted;
        
        public event System.EventHandler<LoadWithIdCompletedEventArgs> LoadWithIdCompleted;
        
        public event System.EventHandler<LoadWithIdsCompletedEventArgs> LoadWithIdsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadAllReferencesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadReferencesOnSingleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LoadReferencesOnManyCompleted;
        
        public event System.EventHandler<LoadDoubleCompletedEventArgs> LoadDoubleCompleted;
        
        public event System.EventHandler<LoadScalarCompletedEventArgs> LoadScalarCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InitializeRepositoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateIdCompleted;
        
        public Evaluant.Uss.Domain.Entry[][] Load(string query) {
            return base.Channel.Load(query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoad(string query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoad(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Evaluant.Uss.Domain.Entry[][] EndLoad(System.IAsyncResult result) {
            return base.Channel.EndLoad(result);
        }
        
        private System.IAsyncResult OnBeginLoad(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string query = ((string)(inValues[0]));
            return this.BeginLoad(query, callback, asyncState);
        }
        
        private object[] OnEndLoad(System.IAsyncResult result) {
            Evaluant.Uss.Domain.Entry[][] retVal = this.EndLoad(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadCompleted(object state) {
            if ((this.LoadCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCompleted(this, new LoadCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadAsync(string query) {
            this.LoadAsync(query, null);
        }
        
        public void LoadAsync(string query, object userState) {
            if ((this.onBeginLoadDelegate == null)) {
                this.onBeginLoadDelegate = new BeginOperationDelegate(this.OnBeginLoad);
            }
            if ((this.onEndLoadDelegate == null)) {
                this.onEndLoadDelegate = new EndOperationDelegate(this.OnEndLoad);
            }
            if ((this.onLoadCompletedDelegate == null)) {
                this.onLoadCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCompleted);
            }
            base.InvokeAsync(this.onBeginLoadDelegate, new object[] {
                        query}, this.onEndLoadDelegate, this.onLoadCompletedDelegate, userState);
        }
        
        public Evaluant.Uss.Domain.Entry[][] LoadWithPaging(string query, int first, int max) {
            return base.Channel.LoadWithPaging(query, first, max);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadWithPaging(string query, int first, int max, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadWithPaging(query, first, max, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Evaluant.Uss.Domain.Entry[][] EndLoadWithPaging(System.IAsyncResult result) {
            return base.Channel.EndLoadWithPaging(result);
        }
        
        private System.IAsyncResult OnBeginLoadWithPaging(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string query = ((string)(inValues[0]));
            int first = ((int)(inValues[1]));
            int max = ((int)(inValues[2]));
            return this.BeginLoadWithPaging(query, first, max, callback, asyncState);
        }
        
        private object[] OnEndLoadWithPaging(System.IAsyncResult result) {
            Evaluant.Uss.Domain.Entry[][] retVal = this.EndLoadWithPaging(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadWithPagingCompleted(object state) {
            if ((this.LoadWithPagingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadWithPagingCompleted(this, new LoadWithPagingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadWithPagingAsync(string query, int first, int max) {
            this.LoadWithPagingAsync(query, first, max, null);
        }
        
        public void LoadWithPagingAsync(string query, int first, int max, object userState) {
            if ((this.onBeginLoadWithPagingDelegate == null)) {
                this.onBeginLoadWithPagingDelegate = new BeginOperationDelegate(this.OnBeginLoadWithPaging);
            }
            if ((this.onEndLoadWithPagingDelegate == null)) {
                this.onEndLoadWithPagingDelegate = new EndOperationDelegate(this.OnEndLoadWithPaging);
            }
            if ((this.onLoadWithPagingCompletedDelegate == null)) {
                this.onLoadWithPagingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadWithPagingCompleted);
            }
            base.InvokeAsync(this.onBeginLoadWithPagingDelegate, new object[] {
                        query,
                        first,
                        max}, this.onEndLoadWithPagingDelegate, this.onLoadWithPagingCompletedDelegate, userState);
        }
        
        public Evaluant.Uss.Domain.Entry[] LoadWithId(string type, string id) {
            return base.Channel.LoadWithId(type, id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadWithId(string type, string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadWithId(type, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Evaluant.Uss.Domain.Entry[] EndLoadWithId(System.IAsyncResult result) {
            return base.Channel.EndLoadWithId(result);
        }
        
        private System.IAsyncResult OnBeginLoadWithId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            string id = ((string)(inValues[1]));
            return this.BeginLoadWithId(type, id, callback, asyncState);
        }
        
        private object[] OnEndLoadWithId(System.IAsyncResult result) {
            Evaluant.Uss.Domain.Entry[] retVal = this.EndLoadWithId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadWithIdCompleted(object state) {
            if ((this.LoadWithIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadWithIdCompleted(this, new LoadWithIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadWithIdAsync(string type, string id) {
            this.LoadWithIdAsync(type, id, null);
        }
        
        public void LoadWithIdAsync(string type, string id, object userState) {
            if ((this.onBeginLoadWithIdDelegate == null)) {
                this.onBeginLoadWithIdDelegate = new BeginOperationDelegate(this.OnBeginLoadWithId);
            }
            if ((this.onEndLoadWithIdDelegate == null)) {
                this.onEndLoadWithIdDelegate = new EndOperationDelegate(this.OnEndLoadWithId);
            }
            if ((this.onLoadWithIdCompletedDelegate == null)) {
                this.onLoadWithIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadWithIdCompleted);
            }
            base.InvokeAsync(this.onBeginLoadWithIdDelegate, new object[] {
                        type,
                        id}, this.onEndLoadWithIdDelegate, this.onLoadWithIdCompletedDelegate, userState);
        }
        
        public Evaluant.Uss.Domain.Entry[][] LoadWithIds(string type, string[] id) {
            return base.Channel.LoadWithIds(type, id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadWithIds(string type, string[] id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadWithIds(type, id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Evaluant.Uss.Domain.Entry[][] EndLoadWithIds(System.IAsyncResult result) {
            return base.Channel.EndLoadWithIds(result);
        }
        
        private System.IAsyncResult OnBeginLoadWithIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string type = ((string)(inValues[0]));
            string[] id = ((string[])(inValues[1]));
            return this.BeginLoadWithIds(type, id, callback, asyncState);
        }
        
        private object[] OnEndLoadWithIds(System.IAsyncResult result) {
            Evaluant.Uss.Domain.Entry[][] retVal = this.EndLoadWithIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadWithIdsCompleted(object state) {
            if ((this.LoadWithIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadWithIdsCompleted(this, new LoadWithIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadWithIdsAsync(string type, string[] id) {
            this.LoadWithIdsAsync(type, id, null);
        }
        
        public void LoadWithIdsAsync(string type, string[] id, object userState) {
            if ((this.onBeginLoadWithIdsDelegate == null)) {
                this.onBeginLoadWithIdsDelegate = new BeginOperationDelegate(this.OnBeginLoadWithIds);
            }
            if ((this.onEndLoadWithIdsDelegate == null)) {
                this.onEndLoadWithIdsDelegate = new EndOperationDelegate(this.OnEndLoadWithIds);
            }
            if ((this.onLoadWithIdsCompletedDelegate == null)) {
                this.onLoadWithIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadWithIdsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadWithIdsDelegate, new object[] {
                        type,
                        id}, this.onEndLoadWithIdsDelegate, this.onLoadWithIdsCompletedDelegate, userState);
        }
        
        public void LoadAllReferences(Evaluant.Uss.Domain.Entry[] entity) {
            base.Channel.LoadAllReferences(entity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadAllReferences(Evaluant.Uss.Domain.Entry[] entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadAllReferences(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadAllReferences(System.IAsyncResult result) {
            base.Channel.EndLoadAllReferences(result);
        }
        
        private System.IAsyncResult OnBeginLoadAllReferences(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Evaluant.Uss.Domain.Entry[] entity = ((Evaluant.Uss.Domain.Entry[])(inValues[0]));
            return this.BeginLoadAllReferences(entity, callback, asyncState);
        }
        
        private object[] OnEndLoadAllReferences(System.IAsyncResult result) {
            this.EndLoadAllReferences(result);
            return null;
        }
        
        private void OnLoadAllReferencesCompleted(object state) {
            if ((this.LoadAllReferencesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadAllReferencesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadAllReferencesAsync(Evaluant.Uss.Domain.Entry[] entity) {
            this.LoadAllReferencesAsync(entity, null);
        }
        
        public void LoadAllReferencesAsync(Evaluant.Uss.Domain.Entry[] entity, object userState) {
            if ((this.onBeginLoadAllReferencesDelegate == null)) {
                this.onBeginLoadAllReferencesDelegate = new BeginOperationDelegate(this.OnBeginLoadAllReferences);
            }
            if ((this.onEndLoadAllReferencesDelegate == null)) {
                this.onEndLoadAllReferencesDelegate = new EndOperationDelegate(this.OnEndLoadAllReferences);
            }
            if ((this.onLoadAllReferencesCompletedDelegate == null)) {
                this.onLoadAllReferencesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadAllReferencesCompleted);
            }
            base.InvokeAsync(this.onBeginLoadAllReferencesDelegate, new object[] {
                        entity}, this.onEndLoadAllReferencesDelegate, this.onLoadAllReferencesCompletedDelegate, userState);
        }
        
        public void LoadReferencesOnSingle(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references) {
            base.Channel.LoadReferencesOnSingle(entity, references);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadReferencesOnSingle(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadReferencesOnSingle(entity, references, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadReferencesOnSingle(System.IAsyncResult result) {
            base.Channel.EndLoadReferencesOnSingle(result);
        }
        
        private System.IAsyncResult OnBeginLoadReferencesOnSingle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Evaluant.Uss.Domain.Entry[] entity = ((Evaluant.Uss.Domain.Entry[])(inValues[0]));
            Evaluant.NLinq.NLinqQuery[] references = ((Evaluant.NLinq.NLinqQuery[])(inValues[1]));
            return this.BeginLoadReferencesOnSingle(entity, references, callback, asyncState);
        }
        
        private object[] OnEndLoadReferencesOnSingle(System.IAsyncResult result) {
            this.EndLoadReferencesOnSingle(result);
            return null;
        }
        
        private void OnLoadReferencesOnSingleCompleted(object state) {
            if ((this.LoadReferencesOnSingleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadReferencesOnSingleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadReferencesOnSingleAsync(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references) {
            this.LoadReferencesOnSingleAsync(entity, references, null);
        }
        
        public void LoadReferencesOnSingleAsync(Evaluant.Uss.Domain.Entry[] entity, Evaluant.NLinq.NLinqQuery[] references, object userState) {
            if ((this.onBeginLoadReferencesOnSingleDelegate == null)) {
                this.onBeginLoadReferencesOnSingleDelegate = new BeginOperationDelegate(this.OnBeginLoadReferencesOnSingle);
            }
            if ((this.onEndLoadReferencesOnSingleDelegate == null)) {
                this.onEndLoadReferencesOnSingleDelegate = new EndOperationDelegate(this.OnEndLoadReferencesOnSingle);
            }
            if ((this.onLoadReferencesOnSingleCompletedDelegate == null)) {
                this.onLoadReferencesOnSingleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadReferencesOnSingleCompleted);
            }
            base.InvokeAsync(this.onBeginLoadReferencesOnSingleDelegate, new object[] {
                        entity,
                        references}, this.onEndLoadReferencesOnSingleDelegate, this.onLoadReferencesOnSingleCompletedDelegate, userState);
        }
        
        public void LoadReferencesOnMany(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references) {
            base.Channel.LoadReferencesOnMany(entities, references);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadReferencesOnMany(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadReferencesOnMany(entities, references, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLoadReferencesOnMany(System.IAsyncResult result) {
            base.Channel.EndLoadReferencesOnMany(result);
        }
        
        private System.IAsyncResult OnBeginLoadReferencesOnMany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Evaluant.Uss.Domain.Entry[][] entities = ((Evaluant.Uss.Domain.Entry[][])(inValues[0]));
            Evaluant.NLinq.NLinqQuery[] references = ((Evaluant.NLinq.NLinqQuery[])(inValues[1]));
            return this.BeginLoadReferencesOnMany(entities, references, callback, asyncState);
        }
        
        private object[] OnEndLoadReferencesOnMany(System.IAsyncResult result) {
            this.EndLoadReferencesOnMany(result);
            return null;
        }
        
        private void OnLoadReferencesOnManyCompleted(object state) {
            if ((this.LoadReferencesOnManyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadReferencesOnManyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadReferencesOnManyAsync(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references) {
            this.LoadReferencesOnManyAsync(entities, references, null);
        }
        
        public void LoadReferencesOnManyAsync(Evaluant.Uss.Domain.Entry[][] entities, Evaluant.NLinq.NLinqQuery[] references, object userState) {
            if ((this.onBeginLoadReferencesOnManyDelegate == null)) {
                this.onBeginLoadReferencesOnManyDelegate = new BeginOperationDelegate(this.OnBeginLoadReferencesOnMany);
            }
            if ((this.onEndLoadReferencesOnManyDelegate == null)) {
                this.onEndLoadReferencesOnManyDelegate = new EndOperationDelegate(this.OnEndLoadReferencesOnMany);
            }
            if ((this.onLoadReferencesOnManyCompletedDelegate == null)) {
                this.onLoadReferencesOnManyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadReferencesOnManyCompleted);
            }
            base.InvokeAsync(this.onBeginLoadReferencesOnManyDelegate, new object[] {
                        entities,
                        references}, this.onEndLoadReferencesOnManyDelegate, this.onLoadReferencesOnManyCompletedDelegate, userState);
        }
        
        public double LoadDouble(string query) {
            return base.Channel.LoadDouble(query);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadDouble(string query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadDouble(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public double EndLoadDouble(System.IAsyncResult result) {
            return base.Channel.EndLoadDouble(result);
        }
        
        private System.IAsyncResult OnBeginLoadDouble(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string query = ((string)(inValues[0]));
            return this.BeginLoadDouble(query, callback, asyncState);
        }
        
        private object[] OnEndLoadDouble(System.IAsyncResult result) {
            double retVal = this.EndLoadDouble(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadDoubleCompleted(object state) {
            if ((this.LoadDoubleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadDoubleCompleted(this, new LoadDoubleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadDoubleAsync(string query) {
            this.LoadDoubleAsync(query, null);
        }
        
        public void LoadDoubleAsync(string query, object userState) {
            if ((this.onBeginLoadDoubleDelegate == null)) {
                this.onBeginLoadDoubleDelegate = new BeginOperationDelegate(this.OnBeginLoadDouble);
            }
            if ((this.onEndLoadDoubleDelegate == null)) {
                this.onEndLoadDoubleDelegate = new EndOperationDelegate(this.OnEndLoadDouble);
            }
            if ((this.onLoadDoubleCompletedDelegate == null)) {
                this.onLoadDoubleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadDoubleCompleted);
            }
            base.InvokeAsync(this.onBeginLoadDoubleDelegate, new object[] {
                        query}, this.onEndLoadDoubleDelegate, this.onLoadDoubleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine.LoadScalar(Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest request) {
            return base.Channel.LoadScalar(request);
        }
        
        public string LoadScalar(string ExpectedType, int First, int Max, string Query, out object result) {
            Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest inValue = new Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest();
            inValue.ExpectedType = ExpectedType;
            inValue.First = First;
            inValue.Max = Max;
            inValue.Query = Query;
            Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse retVal = ((Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine)(this)).LoadScalar(inValue);
            result = retVal.result;
            return retVal.returnType;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine.BeginLoadScalar(Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadScalar(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLoadScalar(string ExpectedType, int First, int Max, string Query, System.AsyncCallback callback, object asyncState) {
            Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest inValue = new Evaluant.Uss.WcfClient.ServiceReference.LoadScalarRequest();
            inValue.ExpectedType = ExpectedType;
            inValue.First = First;
            inValue.Max = Max;
            inValue.Query = Query;
            return ((Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine)(this)).BeginLoadScalar(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine.EndLoadScalar(System.IAsyncResult result) {
            return base.Channel.EndLoadScalar(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndLoadScalar(System.IAsyncResult result, out object result1) {
            Evaluant.Uss.WcfClient.ServiceReference.LoadScalarResponse retVal = ((Evaluant.Uss.WcfClient.ServiceReference.IRemotePersistenceEngine)(this)).EndLoadScalar(result);
            result1 = retVal.result;
            return retVal.returnType;
        }
        
        private System.IAsyncResult OnBeginLoadScalar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ExpectedType = ((string)(inValues[0]));
            int First = ((int)(inValues[1]));
            int Max = ((int)(inValues[2]));
            string Query = ((string)(inValues[3]));
            return this.BeginLoadScalar(ExpectedType, First, Max, Query, callback, asyncState);
        }
        
        private object[] OnEndLoadScalar(System.IAsyncResult result) {
            object result1 = this.GetDefaultValueForInitialization<object>();
            string retVal = this.EndLoadScalar(result, out result1);
            return new object[] {
                    result1,
                    retVal};
        }
        
        private void OnLoadScalarCompleted(object state) {
            if ((this.LoadScalarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadScalarCompleted(this, new LoadScalarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadScalarAsync(string ExpectedType, int First, int Max, string Query) {
            this.LoadScalarAsync(ExpectedType, First, Max, Query, null);
        }
        
        public void LoadScalarAsync(string ExpectedType, int First, int Max, string Query, object userState) {
            if ((this.onBeginLoadScalarDelegate == null)) {
                this.onBeginLoadScalarDelegate = new BeginOperationDelegate(this.OnBeginLoadScalar);
            }
            if ((this.onEndLoadScalarDelegate == null)) {
                this.onEndLoadScalarDelegate = new EndOperationDelegate(this.OnEndLoadScalar);
            }
            if ((this.onLoadScalarCompletedDelegate == null)) {
                this.onLoadScalarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadScalarCompleted);
            }
            base.InvokeAsync(this.onBeginLoadScalarDelegate, new object[] {
                        ExpectedType,
                        First,
                        Max,
                        Query}, this.onEndLoadScalarDelegate, this.onLoadScalarCompletedDelegate, userState);
        }
        
        public void InitializeRepository() {
            base.Channel.InitializeRepository();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInitializeRepository(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitializeRepository(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndInitializeRepository(System.IAsyncResult result) {
            base.Channel.EndInitializeRepository(result);
        }
        
        private System.IAsyncResult OnBeginInitializeRepository(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginInitializeRepository(callback, asyncState);
        }
        
        private object[] OnEndInitializeRepository(System.IAsyncResult result) {
            this.EndInitializeRepository(result);
            return null;
        }
        
        private void OnInitializeRepositoryCompleted(object state) {
            if ((this.InitializeRepositoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitializeRepositoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitializeRepositoryAsync() {
            this.InitializeRepositoryAsync(null);
        }
        
        public void InitializeRepositoryAsync(object userState) {
            if ((this.onBeginInitializeRepositoryDelegate == null)) {
                this.onBeginInitializeRepositoryDelegate = new BeginOperationDelegate(this.OnBeginInitializeRepository);
            }
            if ((this.onEndInitializeRepositoryDelegate == null)) {
                this.onEndInitializeRepositoryDelegate = new EndOperationDelegate(this.OnEndInitializeRepository);
            }
            if ((this.onInitializeRepositoryCompletedDelegate == null)) {
                this.onInitializeRepositoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitializeRepositoryCompleted);
            }
            base.InvokeAsync(this.onBeginInitializeRepositoryDelegate, null, this.onEndInitializeRepositoryDelegate, this.onInitializeRepositoryCompletedDelegate, userState);
        }
        
        public void CreateId(Evaluant.Uss.Domain.Entry[] e) {
            base.Channel.CreateId(e);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateId(Evaluant.Uss.Domain.Entry[] e, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateId(e, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCreateId(System.IAsyncResult result) {
            base.Channel.EndCreateId(result);
        }
        
        private System.IAsyncResult OnBeginCreateId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Evaluant.Uss.Domain.Entry[] e = ((Evaluant.Uss.Domain.Entry[])(inValues[0]));
            return this.BeginCreateId(e, callback, asyncState);
        }
        
        private object[] OnEndCreateId(System.IAsyncResult result) {
            this.EndCreateId(result);
            return null;
        }
        
        private void OnCreateIdCompleted(object state) {
            if ((this.CreateIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateIdCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateIdAsync(Evaluant.Uss.Domain.Entry[] e) {
            this.CreateIdAsync(e, null);
        }
        
        public void CreateIdAsync(Evaluant.Uss.Domain.Entry[] e, object userState) {
            if ((this.onBeginCreateIdDelegate == null)) {
                this.onBeginCreateIdDelegate = new BeginOperationDelegate(this.OnBeginCreateId);
            }
            if ((this.onEndCreateIdDelegate == null)) {
                this.onEndCreateIdDelegate = new EndOperationDelegate(this.OnEndCreateId);
            }
            if ((this.onCreateIdCompletedDelegate == null)) {
                this.onCreateIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateIdCompleted);
            }
            base.InvokeAsync(this.onBeginCreateIdDelegate, new object[] {
                        e}, this.onEndCreateIdDelegate, this.onCreateIdCompletedDelegate, userState);
        }
    }
}
